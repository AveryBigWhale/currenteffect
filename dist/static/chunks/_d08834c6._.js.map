{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///Users/koikbing/Desktop/arg-web/currenteffect/assets/logo.svg.mjs%20%28structured%20image%20object%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 810, height: 87, blurDataURL: null, blurWidth: 0, blurHeight: 0 }\n"],"names":[],"mappings":";;;AAAA;;uCACe;IAAE,KAAA,uGAAA,CAAA,UAAG;IAAE,OAAO;IAAK,QAAQ;IAAI,aAAa;IAAM,WAAW;IAAG,YAAY;AAAE","debugId":null}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/koikbing/Desktop/arg-web/currenteffect/components/Navbar.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport Logo from \"../assets/logo.svg\"; // 使用 SVGR 轉換後的 Logo 元件\n\n// 定義傳入的 prop 型別，包含 scrollContainerRef 與 onHeightChange callback\ninterface NavbarProps {\n  scrollContainerRef: React.RefObject<HTMLElement>;\n  onHeightChange: (height: number) => void;\n  fixedColor?: string; // 新增的 prop\n}\n\nexport default function Navbar({ scrollContainerRef, onHeightChange, fixedColor }: NavbarProps) {\n  const [scrolled, setScrolled] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const navbarRef = useRef<HTMLDivElement>(null);\n\n  const toggleMenu = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  useEffect(() => {\n    const container = scrollContainerRef?.current;\n    if (!container) return;\n    const handleScroll = () => {\n      console.log('scrollTop:', container.scrollTop);\n      setScrolled(container.scrollTop > 50);\n    };\n\n    container.addEventListener('scroll', handleScroll);\n    return () => container.removeEventListener('scroll', handleScroll);\n  }, [scrollContainerRef]);\n\n  useEffect(() => {\n    // 當 Navbar mount 後，讀取高度並透過 onHeightChange 傳出\n    if (navbarRef.current) {\n      const height = navbarRef.current.offsetHeight;\n      onHeightChange(height);\n      console.log('Navbar height:', height);\n    }\n  }, [onHeightChange]);\n\n  return (\n    <nav\n      ref={navbarRef}\n      className={`relative fixed top-0 left-0 w-full z-50 transition-colors duration-300 ${\n        scrolled ? 'bg-[#001f3f]' : 'bg-transparent'\n      }`}\n      style={{ backgroundColor: fixedColor || (scrolled ? '#001f3f' : 'transparent') }} // 使用 fixedColor\n    >\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* LOGO */}\n          <div className=\"flex-shrink-0\">\n            <Link href=\"/\">\n              <Image src={Logo} alt=\"Newspaper Icon\" width={240} height={100} />\n            </Link>\n          </div>\n          {/* 桌機選單：在 md 以上顯示 */}\n          <div className=\"hidden md:flex space-x-4\">\n            <Link href=\"/\" className=\"block text-white hover:underline\">\n              首頁\n            </Link>\n            <Link href=\"/about\" className=\"text-white hover:underline\">\n              關於我們\n            </Link>\n            <Link href=\"/news\" className=\"text-white hover:underline\">\n              新聞\n            </Link>\n            {/* <Link href=\"/services\" className=\"text-white hover:underline\">\n              服務項目\n            </Link> */}\n            \n          </div>\n          {/* 行動版選單按鈕：在 md 以下顯示 */}\n          <div className=\"md:hidden\">\n            <button onClick={toggleMenu} className=\"text-white focus:outline-none\">\n              {isOpen ? '✖️' : '☰'}\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* 行動版選單內容：僅在 isOpen 為 true 時顯示 */}\n      {isOpen && (\n        <div className=\"md:hidden bg-[#001f3f]\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\n            <Link href=\"/\" className=\"block text-white hover:underline\">\n              首頁\n            </Link>\n            <Link href=\"/about\" className=\"block text-white hover:underline\">\n              關於我們\n            </Link>\n            {/* <Link href=\"/services\" className=\"block text-white hover:underline\">\n              服務項目\n            </Link> */}\n            <Link href=\"/contact\" className=\"block text-white hover:underline\">\n              聯絡我們\n            </Link>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,mbAAuC,uBAAuB;;;AAJ9D;;;;;AAae,SAAS,OAAO,EAAE,kBAAkB,EAAE,cAAc,EAAE,UAAU,EAAe;;IAC5F,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAEzC,MAAM,aAAa;QACjB,UAAU,CAAC,OAAS,CAAC;IACvB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,MAAM,YAAY,oBAAoB;YACtC,IAAI,CAAC,WAAW;YAChB,MAAM;iDAAe;oBACnB,QAAQ,GAAG,CAAC,cAAc,UAAU,SAAS;oBAC7C,YAAY,UAAU,SAAS,GAAG;gBACpC;;YAEA,UAAU,gBAAgB,CAAC,UAAU;YACrC;oCAAO,IAAM,UAAU,mBAAmB,CAAC,UAAU;;QACvD;2BAAG;QAAC;KAAmB;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,6CAA6C;YAC7C,IAAI,UAAU,OAAO,EAAE;gBACrB,MAAM,SAAS,UAAU,OAAO,CAAC,YAAY;gBAC7C,eAAe;gBACf,QAAQ,GAAG,CAAC,kBAAkB;YAChC;QACF;2BAAG;QAAC;KAAe;IAEnB,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAC,uEAAuE,EACjF,WAAW,iBAAiB,kBAC5B;QACF,OAAO;YAAE,iBAAiB,cAAc,CAAC,WAAW,YAAY,aAAa;QAAE;;0BAE/E,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;0CACT,cAAA,6LAAC,gIAAA,CAAA,UAAK;oCAAC,KAAK,+PAAA,CAAA,UAAI;oCAAE,KAAI;oCAAiB,OAAO;oCAAK,QAAQ;;;;;;;;;;;;;;;;sCAI/D,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAI,WAAU;8CAAmC;;;;;;8CAG5D,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAS,WAAU;8CAA6B;;;;;;8CAG3D,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAQ,WAAU;8CAA6B;;;;;;;;;;;;sCAS5D,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAO,SAAS;gCAAY,WAAU;0CACpC,SAAS,OAAO;;;;;;;;;;;;;;;;;;;;;;YAMxB,wBACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAmC;;;;;;sCAG5D,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAS,WAAU;sCAAmC;;;;;;sCAMjE,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAW,WAAU;sCAAmC;;;;;;;;;;;;;;;;;;;;;;;AAQ/E;GA3FwB;KAAA","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///Users/koikbing/Desktop/arg-web/currenteffect/app/HomeClient.tsx"],"sourcesContent":["// app/HomeClient.tsx\n\"use client\";\n\nimport React, { useRef, useState } from 'react';\nimport NewsSection from '../components/NewsSection';\nimport Navbar from '../components/Navbar';\n\nexport default function HomeClient({ children }: { children: React.ReactNode }) {\n  const scrollContainerRef = useRef<HTMLElement>(null);\n  const [navbarHeight, setNavbarHeight] = useState(0);\n\n  const handleNavbarHeight = (height: number) => {\n    setNavbarHeight(height);\n  };\n\n  return (\n    <div\n      ref={scrollContainerRef}\n      className=\"h-screen overflow-y-scroll snap-y snap-mandatory\"\n      style={{ scrollPaddingTop: `${navbarHeight}px` }}\n    >\n      <Navbar\n        scrollContainerRef={scrollContainerRef}\n        onHeightChange={handleNavbarHeight}\n      />\n      {children}\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AAGrB;AAEA;;;AAJA;;;AAMe,SAAS,WAAW,EAAE,QAAQ,EAAiC;;IAC5E,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAe;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,qBAAqB,CAAC;QAC1B,gBAAgB;IAClB;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAU;QACV,OAAO;YAAE,kBAAkB,GAAG,aAAa,EAAE,CAAC;QAAC;;0BAE/C,6LAAC,wHAAA,CAAA,UAAM;gBACL,oBAAoB;gBACpB,gBAAgB;;;;;;YAEjB;;;;;;;AAGP;GArBwB;KAAA","debugId":null}}]
}